\mbox{}
\clearpage
\setstretch{1.3}  % Reset the line-spacing to 1.3 for body text (if it has changed)

% The Abstract Page
\addtotoc{Abstract}  % Add the "Abstract" page entry to the Contents
\abstract{
\addtocontents{toc}{\vspace{1em}}  % Add a gap in the Contents, for aesthetics

With millions of articles in multiple languages, Wikipedia has become a de-facto source of reference on the Internet today. Each article on Wikipedia contains an encyclopedic information of any possible topic - people, events, inventions, etc. and implicitly represents an entity. Discovery facts of such entities will enable building a comprehensive, computer-processable knowledge base that is valuable for many applications. However, this task is challenging due to the incompleteness and noisy nature of Wikipedia articles. This calls for a mechanism to detect and summarize the most important information of an entity on Wikipedia.

This thesis proposes and implements CATE (stands for \textbf{C}ontext-\textbf{A}ware \textbf{T}imeline for \textbf{E}ntity Illustration), a framework that utilizes Wikipedia to summarize and visualize the important aspects of entities in timeline fashion. Such a system will help user quickly draw an informative picture of the entity (e.g. life of a person, or evolution of a reseach topic, etc.), as well as serve The novelty of CATE consists in seeing the entity in different contexts, synchronous with contemporaneous events. In addition, CATE puts the entity in a relationship with other entities, hence offers a broader portrait about the entity. In order to efficiently query and visualise the events related to the entity, we have been developed a number of techniques that combine information extraction, retrieval and ranking models. The thesis also discusses several evaluations and experimental results to show the effectiveness and performance of the methods used.

%In this work, our aim is to \emph{efficiently identify interesting time points} in Web archives with an assumption that we receive a result list for a given query in standard relevance-order from an existing retrieval system. We consider two forms of Web archives: (i) one where documents have a publication time-stamp and never change (such as news archives), and (ii) the archives where documents undergo revisions, and are thus versioned. In both settings, we define interestingness as the change in top-k result set of two consecutive time-points. The key step in our solution is the maintenance of top-k results valid at each time-point of the archive, which can then be used to compute the interestingness scores for the time-points. We propose two techniques to realize efficient identification of interesting time points: (i) For the case when documents once published never change, we have a simple but effective technique. (ii) For the more general case with versioned documents, we develop an extension to the segment tree which makes it rank-aware and dynamic. To further improve efficiency, we propose an early termination technique which is proven to be very effective. Our methods are shown to be effective in efficiently finding interesting time points in a set of experiments using the New York Times news archive and the Wikipedia versioned archive.


}

\clearpage  % Abstract ended, start a new page